version: '3.8'

services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-mealuser}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-mealpass}
      POSTGRES_DB: ${POSTGRES_DB:-mealplanner}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-mealuser} -d ${POSTGRES_DB:-mealplanner}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USER: ${POSTGRES_USER:-mealuser}
      DB_PASSWORD: ${POSTGRES_PASSWORD:-mealpass}
      DB_NAME: ${POSTGRES_DB:-mealplanner}
      PORT: 8080
    depends_on:
      db:
        condition: service_healthy
    restart: always

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    ports:
      - "${FRONTEND_PORT:-80}:80"
    depends_on:
      - backend
    restart: always

  # Optional: Add nginx as a reverse proxy
  nginx:
    image: nginx:alpine
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/certs:/etc/nginx/certs
    depends_on:
      - frontend
      - backend
    restart: always

volumes:
  postgres_data:
